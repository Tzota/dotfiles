{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"require": {
		"prefix": "rqr",
		"body": "const {${0}} = require('${1}');",
		"description": "добавить common js require"
	},
	"import": {
		"prefix": "mprt",
		"body": "import {${0}} from '${1}';",
		"description": "добавить js module import"
	},
	"region": {
		"prefix": "region",
		"body": "// #region ${1}\n${0}\n// #endregion",
		"description": "добавить #region"
	},
	"eslint-disable-next-line": {
		"prefix": "ednl",
		"body": "// eslint-disable-next-line ${0}",
		"description": "добавить eslint-disable-next-line"
	},
	"create empty React component": {
		"prefix": "cerc",
		"description": "пустой шаблон React компонента",
		"body": [
			"import React, {FunctionComponent} from 'react';",
			"import {connect} from 'react-redux';",
			"import {compose} from 'recompose';",
			"// b2b",
			"import Text from 'b2b/components/Text';",
			"// common",
			"import {HOC} from '~/types';",
			"// page",
			"import {",
			"    Page,",
			"} from '......./types';",
			"import css from './style.css';",
			"",
			"interface Props {",
			"}",
			"const ${TM_DIRECTORY/(.*)\\/(.+)$/$2/}: FunctionComponent<Props> = ({",
			"}) => (",
			"    <div>",
			"        ${TM_DIRECTORY/(.*)\\/(.+)$/$2/}",
			"    </div>",
			");",
			"",
			"const mapStateToProps = ({page}: {page: Page}) => ({",
			"    page,",
			"});",
			"",
			"const enhance: HOC<Props, {}> = compose(",
			"    connect(mapStateToProps),",
			");",
			"",
			"export default enhance(${TM_DIRECTORY/(.*)\\/(.+)$/$2/});",

		],
	},
}
